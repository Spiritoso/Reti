import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
/*
 * invio messaggio con nome file di testo e numero linea che vuole ricevere (richiesti da console)
 * stampa del messaggio ricevuto (linea file o errore)
 */
public class Client {
	public static void main(String[] args) {
		InetAddress add = null;
		int port = -1;
		
		if(args.length != 2) {
			System.out.println("Errore numero argomenti: addr e porta");
			System.exit(1);
		}else {
			try {
				add = InetAddress.getByName(args[0]);
				port = Integer.parseInt(args[1]);
			} catch (UnknownHostException e) {
				System.out.println("Errore conversione ip");
				e.printStackTrace();
				System.exit(2);
			}
		}
		
		try (DatagramSocket socket = new DatagramSocket()) {
			socket.setSoTimeout(30000);
			
			byte[] buf = new byte[256];

			DatagramPacket packet = new DatagramPacket(buf, buf.length, add, port);
			System.out.println("C: avviato- " + socket.getLocalSocketAddress());

			//creazione collegamento con stdin
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			
			String nomeFile = null;
			int linea = -1;
			
			String messaggio = null;
			String risposta = null;
			byte[] data;
			
			System.out.println("\n^D(Unix)/^Z(Win)+invio per uscire, "
					+ "altrimenti inserisci nome file (con estensione)");
			while((nomeFile = br.readLine()) != null) {
				System.out.println("linea: ");
				linea = Integer.parseInt(br.readLine());
				messaggio = nomeFile + " " + linea;		//usero uno stringtokenizer per separarli sul server
				System.out.println("\n^D(Unix)/^Z(Win)+invio per uscire, "
						+ "altrimenti inserisci nome file (con estensione)");
			}
			
			//creazione pacchetto
			ByteArrayOutputStream boStream = new ByteArrayOutputStream();
			DataOutputStream doStream = new DataOutputStream(boStream);		//incapsulamento per avere writeUtf()
			doStream.writeUTF(messaggio);
			data = boStream.toByteArray();		//trasformo la stringa utf in uno stream di byte
			
			packet.setData(buf);
			socket.send(packet);
			
			System.out.println("C: inviato- " + messaggio);

			//parte di ricezione
			packet.setData(buf);
			socket.receive(packet);
			ByteArrayInputStream biStream = new ByteArrayInputStream(packet.getData(), 0, packet.getLength());
			DataInputStream diStream = new DataInputStream(biStream);
			risposta = diStream.readUTF();		//leggo l'utf
			System.out.println("C: risposta- " + risposta);
			

			String s = new String(packet.getData());
			System.out.println("C: ricevuto- " + s);

			System.out.println("C- fine");
		} catch (SocketException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
