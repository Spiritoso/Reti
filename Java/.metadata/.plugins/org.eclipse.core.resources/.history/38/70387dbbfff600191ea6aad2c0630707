import java.io.*;
import java.net.*;
import java.util.StringTokenizer;

import org.graalvm.compiler.nodes.debug.StringToBytesNode;

/*
 * Invia richieste contenenti nomeFile 
 * @args[0] = ipServer
 * @args[1] = portaServer
 * @args[2] = nomeFile
 * 
 */
public class Client {
	public static void main(String[] args) {
		System.out.println("C- avviato...");
		DatagramSocket socket = null;
		DatagramPacket packet = null;
		InetAddress addr = null;
		int port = -1;
		String file = null;
		byte[] buf = new byte[256];

		// controllo argomenti
		if (args.length == 3) {
			try {
				addr = InetAddress.getByName(args[0]);
				port = Integer.parseInt(args[1]);
				if (port < 1024 || port > 65535) {
					System.out.println("Errore portaServer");
					System.exit(1);
				}
				file = args[2];
			} catch (NumberFormatException e) {
				System.err.println("Errore conversione porta: ");
				e.printStackTrace();
				System.exit(1);
			} catch (UnknownHostException e) {
				System.err.println("Errore ipServer: ");
				e.printStackTrace();
				System.exit(1);
			}
		} else {
			System.out.println("Errore argomenti: ipServer portaServer nomeFile");
			System.exit(2);
		}

		// creazione socket e packet
		try {
			socket = new DatagramSocket();
			packet = new DatagramPacket(buf, buf.length, addr, port);
			System.out.println("C- creata socket: " + socket.getLocalAddress());
		} catch (SocketException e) {
			System.err.println("Errore creazione socket: ");
			e.printStackTrace();
			System.exit(3);
		}

		try {
			BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); // reader legato alla cosole
			String riga = null;
			ByteArrayOutputStream boStream = null;
			DataOutputStream doStream = null;
			byte[] data;
			ByteArrayInputStream biStream = null;
			DataInputStream diStream = null;
			String risposta = null;
			StringTokenizer str = null;

			// invio richiesta a DiscoveryServer per questo file: mi ritornera la porta da
			// usare o -1(termino)
			try {
				boStream = new ByteArrayOutputStream();
				doStream = new DataOutputStream(boStream);
				doStream.writeUTF(file);
				data = boStream.toByteArray();
				
				packet.setData(data);
				socket.receive(packet);
				
			} catch (IOException e) {
				e.printStackTrace();
				System.exit(3);
			}
			

			// ciclo in cui si chiede da terminale di iserire la coppia di righe da
			// scambiare e
			// stampo il risultato ricevuto da RowSwapper
			System.out.println("Inserire numero delle 2 righe da scambiare del file: " + file);
			while ((riga = in.readLine()) != null) {
				str = new StringTokenizer(riga);

				System.out.println("Inserire numero delle 2 righe da scambiare del file: " + file);
			}

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
